Name: Yongtak Jun
Email: yjun4@myseneca.ca
Date: Mar/12/2021



This week, we have learned Standard Template Library. Especially, doing this workshop, I had chance 
to use vector. Using vector, it was much easier to handle dynamically allocated array than before. 
Even, it does not need to deallocate the dynamically allocated memory region. However, in this 
work shop, I had to deallocate the dynamically allocated memory region. That is because it was 
array of pointers, and each pointer has dynamically allocated memory, so I had to deallocate them 
respectively, but I do not need to deallocate the array of pointers itself since it was an instance of 
vector.

In the ¡®loadData()¡¯ function, I have coded try and catch so that I could deal with the situation when 
an error has happened. I think try, catch and throw are the really good way to handle errors.

While doing this workshop, I had to use list<Vehicle*> and vector<Vehicle*>. If we used just 
list<Vehicle> or vector<Vehicle>, it would not work because we have used polymorphism in this 
workshop, and basically, polymorphism is that we can assign derived class¡¯ object to variable of 
base class¡¯ pointer type or reference type. Therefore, to build this program, we had to use 
list<Vehicle*> and vector<Vehicle*> rather than list<Vehicle> or vector<Vehicle>.